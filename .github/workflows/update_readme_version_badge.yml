# name: Update README version badge

# on:
#   push:
#     branches:
#       - main  # 트리거할 브랜치

# permissions:
#   contents: write

# jobs:
#   update-readme:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: Get default branch from GitHub API
#         id: get_default_branch
#         run: |
#           default_branch=$(curl -s https://api.github.com/repos/mellerikat/alo | jq -r '.default_branch')
#           echo "Default branch: $default_branch"
#           echo "::set-output name=branch::$default_branch"

#       - name: Update README.md version tag
#         run: |
#           sed -i "s/ALO-V2\.7\.0/ALO-${{ steps.get_default_branch.outputs.branch }}/g" README.md

#       - name: Commit and push changes
#         run: |
#           git config --global user.name "github-actions[bot]"
#           git config --global user.email "github-actions[bot]@users.noreply.github.com"
#           git add README.md
#           git commit -m "Update ALO version badge to ${{ steps.get_default_branch.outputs.branch }}" || echo "No changes to commit"
#           git push "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/mellerihub/Awesome-AISolutions-for-mellerikat.git" HEAD:${{ github.ref }}


name: Update README version badge

on:
  push:
    branches:
      - main  # 트리거할 브랜치
  # schedule:
  #   - cron: '0 0 * * *'  # Run daily at midnight

permissions:
  contents: write

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get default branch from GitHub API
        id: get_default_branch
        run: |
          default_branch=$(curl -s https://api.github.com/repos/mellerikat/alo | jq -r '.default_branch')
          echo "Default branch: $default_branch"
          echo "default_branch=$default_branch" >> $GITHUB_OUTPUT

      - name: Get latest PyPI version
        id: get_pypi_version
        run: |
          latest_version=$(curl -s https://pypi.org/pypi/mellerikat-alo/json | jq -r '.info.version')
          echo "Latest PyPI version: $latest_version"
          echo "pypi_version=$latest_version" >> $GITHUB_OUTPUT
          
          # Determine if this is a V2 or V3 version
          if [[ "$latest_version" == 2.* ]]; then
            echo "version_series=v2" >> $GITHUB_OUTPUT
          elif [[ "$latest_version" == 3.* ]]; then
            echo "version_series=v3" >> $GITHUB_OUTPUT
          else
            echo "version_series=other" >> $GITHUB_OUTPUT
          fi

      - name: Update README.md version tags
        run: |
          # Update ALO-V2.x.x pattern with GitHub default branch
          sed -i -E "s/ALO-v2\.[0-9]+\.[0-9]+/ALO-${{ steps.get_default_branch.outputs.default_branch }}/g" README.md
          
          # Update ALO-v3.x.x badge with PyPI version (only if PyPI has a v3 version)
          if [[ "${{ steps.get_pypi_version.outputs.version_series }}" == "v3" ]]; then
            echo "Updating V3 badge with PyPI version v${{ steps.get_pypi_version.outputs.pypi_version }}"
            sed -i -E "s|(https://img.shields.io/badge/ALO-v3\.[0-9]+\.[0-9]+\.[0-9]-red)|(https://img.shields.io/badge/ALO-v${{ steps.get_pypi_version.outputs.pypi_version }}-red)|g" README.md
          elif [[ "${{ steps.get_pypi_version.outputs.version_series }}" == "v2" ]]; then
            echo "PyPI version is v2 series, not updating v3 badge"
          else
            echo "PyPI version is neither v2 nor v3 series, not updating badges"
          fi

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "Update ALO version badges (Default branch: ${{ steps.get_default_branch.outputs.default_branch }}, PyPI: v${{ steps.get_pypi_version.outputs.pypi_version }})" || echo "No changes to commit"
          git push "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/mellerihub/Awesome-AISolutions-for-mellerikat.git" HEAD:${{ github.ref }}
